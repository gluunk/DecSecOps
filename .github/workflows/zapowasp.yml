name: ZAP Security Scan

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout do repositório
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Instalar Docker Compose
      - name: Install Docker Compose
        run: |
          curl -L "https://github.com/docker/compose/releases/download/v2.17.3/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          chmod +x /usr/local/bin/docker-compose
          docker-compose version

      # Iniciar os serviços com Docker Compose
      - name: Start Docker Compose
        run: docker-compose up -d --build

      # Verificar a rede após o docker-compose up
      - name: Verify Network
        run: docker network ls

      # Aguardar o serviço "app" ficar acessível
      - name: Wait for App to be Ready
        run: |
          echo "Aguardando o serviço app estar acessível..."
          for i in {1..10}; do
            if docker exec $(docker ps -qf "name=app") curl -s http://localhost:5000; then
              echo "Serviço disponível!"
              break
            fi
            echo "Tentativa $i: Serviço ainda não está acessível, aguardando..."
            sleep 5
          done

      # Adiciona um tempo antes de rodar o ZAP
      - name: Sleep before ZAP
        run: sleep 30

      # Executar o ZAP Scan diretamente na mesma rede do Docker Compose
      - name: Run ZAP Scan
        run: |
          mkdir -p ./relatorios/zap
          docker run --rm --user root --network=decsecops_rnpesr --name zap-scan \
            -v $(pwd)/relatorios/zap:/zap/wrk \
            ghcr.io/zaproxy/zaproxy:stable bash -c "
              apt-get update && apt-get install -y dnsutils && sleep 5 && nslookup app && curl -s http://app:5000 &&
              zap-baseline.py -t http://app:5000 -r /zap/wrk/zap_report.html &&
              echo 'pwd: ' && pwd &&
              echo 'listando arquivos no diretório /zap/wrk' &&
              ls -lah /zap/wrk &&
              echo 'find para buscar o arquivo zap_report.html' &&
              find /zap/wrk -name zap_report.html &&
              echo 'Verificando se o relatório foi realmente criado...' &&
              if [ -f /zap/wrk/zap_report.html ]; then
                echo 'Relatório gerado com sucesso!';
              else
                echo 'Erro: Relatório não encontrado!';
                exit 1;
              fi"
        continue-on-error: true

      # Exibir a saída do diretório no GitHub Actions antes de tentar o upload
      - name: Show ZAP Report Directory in GitHub Actions
        run: |
          echo "Diretório de Relatórios ZAP:"
          ls -lah ./relatorios/zap

      # Tentar fazer upload mesmo que o arquivo não exista, garantindo que o erro seja gerado.
      - name: Upload ZAP Report
        uses: actions/upload-artifact@v4
        with:
          name: ZAP Report
          path: ./relatorios/zap/zap_report.html
        if: always()

      # Parar os serviços com Docker Compose
      - name: Stop Docker Compose
        if: always()
        run: docker-compose down
