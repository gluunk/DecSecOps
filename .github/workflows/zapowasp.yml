name: ZAP Security Scan

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout do repositório
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Instalar Docker Compose
      - name: Install Docker Compose
        run: |
          curl -L "https://github.com/docker/compose/releases/download/v2.17.3/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          chmod +x /usr/local/bin/docker-compose
          docker-compose version

      # Criar a rede rnpesr se não existir
      - name: Create Network
        run: docker network create rnpesr || true

      # Iniciar os serviços com Docker Compose
      - name: Start Docker Compose
        run: docker-compose up -d --build

      # Executar o ZAP Scan diretamente no container da aplicação
      - name: Run ZAP Scan
        run: |
          mkdir -p ./relatorios/zap
          chmod -R 777 ./relatorios/zap
          docker run --rm --network="rnpesr" -v $(pwd)/relatorios/zap:/zap/wrk ghcr.io/zaproxy/zaproxy:stable zap-baseline.py \
            -t http://app:5000 \
            -r /zap/wrk/report.html
        continue-on-error: true

      # Fazer upload do relatório do ZAP
      - name: Upload ZAP Report
        uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: ./relatorios/zap/report.html
        if: always()

      # Parar os serviços com Docker Compose
      - name: Stop Docker Compose
        if: always()
        run: docker-compose down