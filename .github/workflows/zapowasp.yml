name: Estudo de Caso - Trivy

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Generate timestamp
        id: timestamp
        run: echo "::set-output name=now::$(date +%s)"

      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag my-image-name:${{ steps.timestamp.outputs.now }}

      # Executar o ZAP Scan diretamente na mesma rede do Docker Compose
      - name: Run ZAP Scan
        run: |
          mkdir -p ./relatorios/zap
          docker run --rm --user root --name zap-scan \
            -v $(pwd)/relatorios/zap:/zap/wrk \
            ghcr.io/zaproxy/zaproxy:stable zap-baseline.py \
            -r /zap/wrk/report.html
        continue-on-error: true

      # Publicar o relatório HTML como artefato do GitHub Actions
      - name: Upload ZAP Report
        uses: actions/upload-artifact@v4
        with:
          name: ZAP Report
          path: ./relatorios/zap/report.html
        if: always()

      # Parar os serviços com Docker Compose
      - name: Stop Docker Compose
        if: always()
        run: docker-compose down
