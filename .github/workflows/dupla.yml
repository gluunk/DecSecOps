name: Estudo de Caso - Trivy e ZAP

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build_and_scan:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Generate timestamp
        id: timestamp
        run: echo "::set-output name=now::$(date +%s)"

      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag my-image-name:${{ steps.timestamp.outputs.now }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "my-image-name:${{ steps.timestamp.outputs.now }}"
          format: "table"
          exit-code: "1"
          severity: "CRITICAL,HIGH"
          trivyignores: "./trivyignore.yaml"

      - name: Install Docker Compose
        run: |
          curl -L "https://github.com/docker/compose/releases/download/v2.17.3/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          chmod +x /usr/local/bin/docker-compose
          docker-compose version

      - name: Start Docker Compose
        run: docker-compose up -d --build

      - name: Run ZAP Scan
        run: |
          docker run --rm --user root --network=decsecops_rnpesr --name zap-scan \
            -v $(pwd)/relatorios/zap:/zap/wrk \
            ghcr.io/zaproxy/zaproxy:stable bash -c "
              apt-get update &&
              zap-baseline.py -t http://app:5000 -I"

      - name: Stop Docker Compose
        if: always()
        run: docker-compose down